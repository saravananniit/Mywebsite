Ex1: Validation

contact form.html:
===================
<!doctype html>
<html lang="en">
<head>
<title> Contact Us form</title>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link href="styles.css" rel="stylesheet">
</head>
<body style="align-content: center; padding: 10px;">

<div class="wrapper">
    <center><h2>Contact us</h2>
    <div id="validationSummary">
        <ul>

        </ul>
    </div>
    <form action="#" id="myform" onsubmit = "return submitContact(event)">
      <div class="input_field">
          <input type="text" placeholder="Name" id="name">
          <span id="NameError"></span>
      </div>
      <div class="input_field">
          <input type="text" placeholder="Subject" id="subject">
          <span id="SubjectError"></span>
      </div>
      <div class="input_field" id="contactNos">
          <input type="text" placeholder="Phone" id="phone">
          <span id="PhoneNoError"></span>
          
      </div>
      <!-- <div>
        <input placeholder="AdditonalNumber"+count>
      </div> -->
      <div>
        <button id="addContactNo" >+</button>
    </div>

      <div class="input_field">
          <input type="text" placeholder="Email" id="email">
          <span id="EmailError"></span>
      </div>
      <div class="input_field">
          <textarea placeholder="Message" id="message"></textarea>
          <span id="MessageError"></span>
      </div>
       <div>
        <input type="date" name="birthdate" id="birthdate" 
        placeholder="Enter Birthdate" >
    </div> 

      <div class="btn">
          <input type="submit" value="Basic Form">
      </div>
    </form>
    </center>
  </div>
  <script src="three.js"></script>
</body>
</html>
===================================================================================
style.css

body{
    background: #fe8b8e;
  }
  
  .wrapper{
    position: absolute;
    top: 50%;
    left: 50%;
    max-width: 350px;
    width: 100%;
    background: #fff;
    padding: 25px;
    border-radius: 5px;
    /* border : 2px solid saddlebrown */
    
  }
  
  .wrapper h2{
    text-align: center;
    margin-bottom: 20px;
    text-transform: uppercase;
    letter-spacing: 3px;
    color: #332902;
  }
  
  .wrapper .input_field{
    margin-bottom: 10px;
  }
  
  .wrapper .input_field input[type="text"],
  .wrapper textarea{
    border: 1px solid #e0e0e0;
    width: 100%;
    padding: 10px;
  }
  
  .wrapper textarea{
    resize: none;
    height: 80px;
  }
  
  .wrapper .btn input[type="submit"]{
    border: 0px;
    margin-top: 15px;
    padding: 5px;
    text-align: center;
    width: 100%;
    background: #fece0c;
    color: #332902;
    text-transform: uppercase;
    letter-spacing: 5px;
    font-weight: bold;
    border-radius: 25px;
    
  }
  
  #error_message{
    margin-bottom: 20px;
    background: #fe8b8e;
    padding: 0px;
    text-align: center;
    font-size: 14px;
   
  }
==========================================================================================
three.js

// @ts-nocheck
let contacts = [];

const isFieldBlank = (value) => {
    return value === '' || value === undefined || value === null;
}

const isdataValid = (data) => {
    let validRegEx = "^[a-zA-Z.]+$";
    return data.match(validRegEx);

}



const validateName = (Name) => {
    let NameError = "";
    if (isFieldBlank(Name)) {
        NameError = "Name Can't be left blank"
    }
    else if (!isdataValid(Name)) {
        NameError += "Name can contain only alphabets and (.)";

    }
    return NameError;

}



const submitContact = (event) => {
    event.preventDefault();
    let contact = {
        name: document.getElementById("name").value,
        subject: document.getElementById("subject").value,
        phone: document.getElementById("phone").value,
        email: document.getElementById("email").value
    }

    // capture error or validate

    let errors = {
        NameError: validateName(contact.name)
    }
    let errorMessages = Object.values(errors).filter(e => e != '');
    displayValidationSummary(errorMessages);  // to display in summary level

    if (errorMessages.length > 0) // to check and display individually
    {
        displayIndividualErrorMessages(errors);
    }
    else
        contacts.push(contact);

    //console.log(contacts);
}

const displayValidationSummary = (errorMessage) => {
    document.getElementsByTagName('ul')[0].innerHTML = '';
    errorMessage.forEach(element => {
        document.getElementsByTagName('ul')[0].innerHTML +=
            `<li>${element}</li>`
    });
}

const displayIndividualErrorMessages = (errorMessages) => {

    document.getElementById('NameError').innerText = errorMessages.NameError ? "*" : "";

}

==================================================================================
Question : 

create new html CSS and Js if required :

1. Entering purchase date, it should be less than equal to current (disable all future date)

2. Voting eligiblity : you should restrict age (date) does not less than 18 years from current date, selection of date should give in this format (remaining date should be disabled).

use example 1 code to implement the below requirement :

3. Validation : phone number, email, message, subject and display error individual and error as summary
4. To add contact number dynamically : you should add max 2 times date entry (user can have max 3 phone number)

====================================================================================
Ex2: toggle

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>

<body>
    <div>
        <label for="chkAllowSubscription">

            would you like to subscribe on mailing list </label>
        <input id="chkAllowSubscription" type="checkbox">
        <div>
            <div id="subscriptionDetailsBlock">
                <label for="subscriptionDetails">
                    if yes, select the service you want to recevie mailers on
                </label>
           
            <input id="chkProductLaunch" type="checkbox">
            <label for="chkProductLaunch">New Product Launch</label>
            <input id="chkOutlet" type="checkbox">
            <label for="chkOutlet">New Outlets</label>
            <input id="chkMontlyNewsLetters" type="checkbox">
            <label for="chkMontlyNewsLetters">Monthly News letters</label>
        </div>
    </div>
    </div>
<script>

document.getElementById('subscriptionDetailsBlock').style.display="none";

let c=document.getElementById('chkAllowSubscription');
c.addEventListener('click',(event)=>{
if(c.checked)
document.getElementById('subscriptionDetailsBlock').style.display="block";
else
document.getElementById('subscriptionDetailsBlock').style.display="none";
})

</script>

</body>

</html>
=====================================================================================







